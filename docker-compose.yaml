services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=http://libsql:8080
      - API_DOMAIN=${API_DOMAIN:-api.polisync.de}
    ports:
      - ${DEV_PORT:-127.0.0.1:3000:3000}
    depends_on:
      - libsql
    volumes:
      # For development, mount the source code for hot-reloading
      - ${DEV_MOUNT:-./src:/usr/src/app/src:ro}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-domain.rule=Host(`${API_DOMAIN:-api.polisync.de}`)"
      - "traefik.http.routers.api-domain.entrypoints=websecure"
      - "traefik.http.routers.api-domain.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api-ip.rule=HostRegexp(`{ip:[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}}`)"
      - "traefik.http.routers.api-ip.entrypoints=web"
      - "traefik.http.routers.api-ip.priority=1"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    restart: unless-stopped
    networks:
      - traefik-network

  libsql:
    image: ghcr.io/tursodatabase/libsql-server:latest
    volumes:
      - libsql-data:/var/lib/sqld
    environment:
      - SQLD_NODE_ROLE=primary
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - traefik-network

  traefik:
    image: traefik:v2.10
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.priority=10"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-hello@polisync.de}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--log.level=${LOG_LEVEL:-INFO}"
    networks:
      - traefik-network
    restart: unless-stopped
    profiles: ["${ENABLE_TRAEFIK:-disabled}"]

networks:
  traefik-network:
    driver: bridge

volumes:
  libsql-data:
    driver: local
  traefik-certificates:
    driver: local